// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  /// url      = env("DATABASE_URL")
  // for Vercel
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(USER)
  grindzMood   Mood?     @relation(fields: [grindzMoodId], references: [id])
  grindzMoodId Int?
  allergies Allergy[] @relation("UserAllergies")
}

enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition @default(good)
  owner     String
}

model Allergy {
  id    Int              @id @default(autoincrement())
  name  String           @unique
  users User[]           @relation("UserAllergies")
  items DashboardItem[]  @relation("ItemAllergies")
}

model Mood {
  id    Int              @id @default(autoincrement())
  name  String           @unique
  users User[]           // Users who selected this mood
  items DashboardItem[]  // Meals/items associated with this mood
}

model DashboardItem {
  id        Int     @id @default(autoincrement())
  name      String
  image     String
  alt       String
  source    String
  nutrition String
  mood      Mood    @relation(fields: [moodId], references: [id])
  moodId    Int
  allergies Allergy[] @relation("ItemAllergies")
}